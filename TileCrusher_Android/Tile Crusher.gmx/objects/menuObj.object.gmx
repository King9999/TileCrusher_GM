<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("Surface width: " + string(surface_get_width(application_surface)));
show_debug_message("Surface height: " + string(surface_get_height(application_surface)));
/* On this screen, the records data gets read from a file. */
hours = "";
minutes = "";   //used to display time as a string.
secs = "";

uiPos = 0;
if (global.adSupported &amp;&amp; display_get_height() &lt;= DEFAULT_HEIGHT)
{
    uiPos = 25;
}

buttonPos = 75;
if (global.adSupported &amp;&amp; display_get_height() &lt;= DEFAULT_HEIGHT)
{
    buttonPos = 33;
}

//record image
record = instance_create(room_width / 2 - (120 * global.scaleX), (100 + uiPos) * global.scaleY, recObj);

//buttons
levelButton = instance_create(room_width / 4 /** global.scaleX*/, room_height - (buttonPos * global.scaleY), levelBtnObj);
helpButton = instance_create(room_width / 4 + (140 * global.scaleX), room_height - (buttonPos * global.scaleY), helpBtnObj);
backButton = instance_create(room_width / 4 + (280 * global.scaleX), room_height - (buttonPos * global.scaleY), backBtnObj);

//ticker. New feature that updates player on their progress. Can display certain messages when different milestones are hit.
//For example, if the player gets over 10 rage quits, they could be teased for it.
ticker = instance_create(0, 50 + (uiPos * global.scaleY), tickerObj);
tickerPos = view_wview + 12;     //x position of ticker text;
tickerText = "";



/***load file***/
var file = working_directory + "records.ini";

//file_delete(file);  //remove this line when not needed.

if (!file_exists(file))
{
    script_execute(resetRecords, file);
}

script_execute(loadRecords, file);

//timer setup
if (global.hours &lt; 10)
{
    hours = "0" + string(global.hours);
}
else
{
    hours = string(global.hours);
}

if (global.minutes &lt; 10)
{
    minutes = "0" + string(global.minutes);
}
else
{
    minutes = string(global.minutes);
}

if (global.seconds &lt; 10)
{
    secs = "0" + string(global.seconds);
}
else
{
    secs = string(global.seconds);
}

/****Background setup****/
script_execute(setBackground, global.backgroundType);

//display random ticker message
if (!global.firstTimePlaying)
{
    tickerText = script_execute(displayTickerMsg, tickerText);
    show_debug_message("Displaying new ticker message");
}
else
{
    tickerText = 'Welcome to Tile Crusher! Click "Help &amp; Options" to view the tutorial.';
}

/*** Music setup ***/
script_execute(changeBgm, global.trackFile);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//manipulate the background to produce an infinite scrolling effect
if (global.backgroundType == 0)
{
    if (global.backgroundSprite.x &gt; room_width)
    {
        global.backgroundSprite.x = -room_width + 1; //1 is added to eliminate gap between images
    }
    
    if (global.bgCopy.x &gt; room_width)
    {
        global.bgCopy.x = -room_width + 1;
    }
}

//if ticker goes off the screen, reset position.
if (tickerPos /*+ string_length(tickerText)*/ &lt; -room_width)
{
    tickerPos = view_wview + 12;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scroll the background

if (global.backgroundType == 0)
{
    global.backgroundSprite.x++;
    global.bgCopy.x++;
}

//move ticker text
tickerPos -= 2;

//button check
/*if (!instance_exists(screenFadeObj))
{
    if (mouse_check_button_released(mb_left))
    {
        if (mouse_x &gt;= helpButton.x &amp;&amp; mouse_x &lt;= helpButton.x + helpButton.sprite_width)
        {
            if (mouse_y &gt;= helpButton.y &amp;&amp; mouse_y &lt;= helpButton.y + helpButton.sprite_height)
            {
                sound_play(select);
                show_debug_message("Moving to help screen");
                //room_goto(helpScreen);
                global.nextScreen = helpScreen;
                instance_create(0, 0, screenFadeObj);
            }
        }
        
        //back button
        if (mouse_x &gt;= backButton.x &amp;&amp; mouse_x &lt;= backButton.x + backButton.sprite_width)
        {
            if (mouse_y &gt;= backButton.y &amp;&amp; mouse_y &lt;= backButton.y + backButton.sprite_height)
            {
                sound_play(select);
                global.nextScreen = titleScreen;
                instance_create(0, 0, screenFadeObj);
            }
        }
        
        //level menu button
        if (mouse_x &gt;= levelButton.x &amp;&amp; mouse_x &lt;= levelButton.x + levelButton.sprite_width)
        {
            if (mouse_y &gt;= levelButton.y &amp;&amp; mouse_y &lt;= levelButton.y + levelButton.sprite_height)
            {
                sound_play(select);
                global.nextScreen = levelSelectScreen;
                instance_create(0, 0, screenFadeObj);
            }
        }
    }
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(screenFadeObj))
{
    if (mouse_x &gt;= helpButton.x &amp;&amp; mouse_x &lt;= helpButton.x + helpButton.sprite_width)
    {
        if (mouse_y &gt;= helpButton.y &amp;&amp; mouse_y &lt;= helpButton.y + helpButton.sprite_height)
        {
            sound_play(select);
            global.nextScreen = helpScreen;
            instance_create(0, 0, screenFadeObj);
        }
    }
    
    //back button
    if (mouse_x &gt;= backButton.x &amp;&amp; mouse_x &lt;= backButton.x + backButton.sprite_width)
    {
        if (mouse_y &gt;= backButton.y &amp;&amp; mouse_y &lt;= backButton.y + backButton.sprite_height)
        {
            sound_play(select);
            global.nextScreen = titleScreen;
            instance_create(0, 0, screenFadeObj);
        }
    }
    
    //level menu button
    if (mouse_x &gt;= levelButton.x &amp;&amp; mouse_x &lt;= levelButton.x + levelButton.sprite_width)
    {
        if (mouse_y &gt;= levelButton.y &amp;&amp; mouse_y &lt;= levelButton.y + levelButton.sprite_height)
        {
            sound_play(select);
            global.nextScreen = levelSelectScreen;
            instance_create(0, 0, screenFadeObj);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.nextScreen == titleScreen)
{
    sound_stop_all();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//display data


if (!instance_exists(screenFadeObj))
{
    draw_set_color(c_white);
    draw_set_font(gameFont);
    draw_text(record.x, record.y + record.sprite_height + 20 * global.scaleY, "Total Time:   " + hours + ":" + minutes + ":" + secs);
    draw_text(record.x, record.y + record.sprite_height + 50, "Completion:  " + string(global.completionRate) + "%");
    draw_text(record.x, record.y + record.sprite_height + 80, "Tiles Crushed:  " + string(global.crushTotal));
    draw_text(record.x, record.y + record.sprite_height + 110, "Total Losses: " + string(global.lossTotal));
    draw_text(record.x, record.y + record.sprite_height + 140, "Rage Quits:   " + string(global.rageTotal));
    
    //ticker
    draw_set_font(tickerFont);
    draw_text(tickerPos, ticker.y + 5, tickerText);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(screenFadeObj))
{
sound_play(select);
global.nextScreen = titleScreen;
instance_create(0, 0, screenFadeObj);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
