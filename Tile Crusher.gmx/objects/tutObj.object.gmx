<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//set background 
script_execute(setBackground, global.backgroundType);

nextPage = false;   //used to display different tiles

//title
tutorial = instance_create(room_width / 2 - 120, 40, tutTitleObj);

//buttons
nextButton = instance_create(room_width / 3, room_height - 120, nextBtnObj);
quitButton = instance_create(room_width / 3 + 150, room_height - 120, quitTutBtnObj);

//tiles
ball = instance_create(20, 220, ballObj);
ballLabel = instance_create(ball.x + (ball.sprite_width / 8), ball.y + ball.sprite_height - 20, ballLabelObj);

normal = instance_create(20, 320, normalObj);
normLabel = instance_create(normal.x - 10, normal.y + normal.sprite_height - 20, normalLabelObj);

empty = instance_create(20, 420, emptyObj);
emptyLabel = instance_create(empty.x, empty.y + empty.sprite_height - 20, emptyLabelObj);

durable = instance_create(20, 520, durableObj);
durLabel = instance_create(durable.x - 10, durable.y + durable.sprite_height - 20, durableLabelObj);

super = instance_create(20, 220, superObj);
superLabel = instance_create(super.x, super.y + super.sprite_height - 20, superLabelObj);
super.visible = false;
superLabel.visible = false;

target = instance_create(20, 320, targetObj);
targetLabel = instance_create(target.x - 5, target.y + target.sprite_height - 20, targetLabelObj);
target.visible = false;
targetLabel.visible = false;

chain = instance_create(20, 420, chainObj);
chainLabel = instance_create(chain.x, chain.y + chain.sprite_height - 20, chainLabelObj);
chain.visible = false;
chainLabel.visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//manipulate the background to produce an infinite scrolling effect
if (global.backgroundType == 0)
{
    if (global.backgroundSprite.x &gt; room_width)
    {
        global.backgroundSprite.x = -room_width + 1; //1 is added to eliminate gap between images
    }
    
    if (global.bgCopy.x &gt; room_width)
    {
        global.bgCopy.x = -room_width + 1;
    }
}

//change visibility
if (!nextPage)
{
    ball.visible = true;
    ballLabel.visible = true;
    normal.visible = true;
    normLabel.visible = true;
    empty.visible = true;
    emptyLabel.visible = true;
    durable.visible = true;
    durLabel.visible = true;
    
    super.visible = false;
    superLabel.visible = false;
    target.visible = false;
    targetLabel.visible = false;
    chain.visible = false;
    chainLabel.visible = false;
}
else
{
    ball.visible = false;
    ballLabel.visible = false;
    normal.visible = false;
    normLabel.visible = false;
    empty.visible = false;
    emptyLabel.visible = false;
    durable.visible = false;
    durLabel.visible = false;
    
    super.visible = true;
    superLabel.visible = true;
    target.visible = true;
    targetLabel.visible = true;
    chain.visible = true;
    chainLabel.visible = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scroll the background

if (global.backgroundType == 0)
{
    global.backgroundSprite.x++;
    global.bgCopy.x++;
}

//button check
if (!instance_exists(screenFadeObj))
{
    if (mouse_check_button_released(mb_left))
    {
        if (mouse_x &gt;= nextButton.x &amp;&amp; mouse_x &lt;= nextButton.x + nextButton.sprite_width)
        {
            if (mouse_y &gt;= nextButton.y &amp;&amp; mouse_y &lt;= nextButton.y + nextButton.sprite_height)
            {
                sound_play(select);
               nextPage = !nextPage;
            }
        }
        
        //back button
        if (mouse_x &gt;= quitButton.x &amp;&amp; mouse_x &lt;= quitButton.x + quitButton.sprite_width)
        {
            if (mouse_y &gt;= quitButton.y &amp;&amp; mouse_y &lt;= quitButton.y + quitButton.sprite_height)
            {
                sound_play(select);
                //what was the previous screen?
                if (global.previousScreen == helpScreen)
                {
                    global.nextScreen = helpScreen;
                }
                else //we were on game screen
                {
                    global.nextScreen = gameScreen;
                }
                
                instance_create(0, 0, screenFadeObj);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(screenFadeObj))
{
    draw_set_font(gameFont);
    draw_set_color(c_lime);
    draw_text(20, 140, "Crush all destructible tiles by rolling over them with the Wrecking Ball.");
    draw_text(20, 170, "You have a limited number of turns, so mind your movements!");
    
    draw_set_color(c_white);
    
    //ball
    if (!nextPage)
    {
        draw_text(100, ball.y + ball.sprite_height / 4, "This is what you control. Click any tile next to the ball to move it.");
        draw_text(100, normal.y + normal.sprite_height / 4, "These are standard tiles. Smash them to finish the level!");
        draw_text(100, empty.y + empty.sprite_height / 4, "Rolling over these restores tiles, using up precious turns.");
        draw_text(100, durable.y + durable.sprite_height / 4, "Requires more than one crush. The tile's number will tell you!");
    }
    else
    {
        draw_text(100, super.y + super.sprite_height / 4, "Cannot be destroyed, but they won't use up a turn.");
        draw_text(100, target.y + target.sprite_height / 4, "Break the required number of tiles to break this one!");
        draw_text(100, chain.y + chain.sprite_height / 4, "Breaks entire lines of tiles, but will also restore broken ones!");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
