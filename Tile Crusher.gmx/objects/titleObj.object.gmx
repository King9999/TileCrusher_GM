<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* The word "TILE" cascades from the top of the screen, and the word "CRUSHER" ascends from the bottom. */

script_execute(init_script);

tilesComplete = false;      //when true, show buttons and legal string.
musicPlaying = false;       //prevents music from playing in rapid succession.

//set 1
tileSet1[0] = instance_create(room_width / 5, -30, T_Obj);
tileSet1[1] = instance_create(room_width / 5 + 110, -80, I_Obj);
tileSet1[2] = instance_create(room_width / 5 + 220, -130, L_Obj);
tileSet1[3] = instance_create(room_width / 5 + 330, -180, E_Obj);

//set 2
tileSet2[0] = instance_create(room_width / 5, room_height + 30, C_Obj);
tileSet2[1] = instance_create(room_width / 5 + 110, room_height + 80, R_Obj);
tileSet2[2] = instance_create(room_width / 5 + 220, room_height + 130, U_Obj);
tileSet2[3] = instance_create(room_width / 5 + 330, room_height + 180, S_Obj);
tileSet2[4] = instance_create(room_width / 5 + 440, room_height + 230, H_Obj);
tileSet2[5] = instance_create(room_width / 5 + 550, room_height + 280, E_Obj);
tileSet2[6] = instance_create(room_width / 5 + 660, room_height + 330, R_Obj);

/*for (var i = 0; i &lt; 4; i++)
{
    tileSet1[i] = instance_id[i + 1];
}

for (var i = 0; i &lt; 7; i++)
{
    tileSet2[i] = instance_id[i + 5];   //get the 5th to 11th instances, which will be 'CRUSHER'
}*/

//add buttons
startButton = instance_create(room_width / 3, room_height / 1.3, startBtnObj);
startButton.visible = false;

creditsButton = instance_create(startButton.x + 150, startButton.y, creditsBtnObj);
creditsButton.visible = false;

exitButton = instance_create(creditsButton.x + 150, creditsButton.y, exitBtnObj);
exitButton.visible = false;

//background. Starts off invisible, but will scroll.
bg = instance_create(0, 0, bg4Obj);
bgCopy = instance_create(0, -room_height, bg4Obj);
bg.image_alpha = 0;
bgCopy.image_alpha = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bg.y &gt; room_height)
{
    bg.y = -room_height + 1;
}

if (bgCopy.y &gt; room_height)
{
    bgCopy.y = -room_height + 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check if the last tile has finished moving
if (!tilesComplete)
{
  
    if (tileSet2[6].y == room_height / 3 + 100)
    {
        tilesComplete = true;
    }
   
}

//start playing music
if (tilesComplete &amp;&amp; !sound_isplaying(Time_Flies_By))
{
    //musicPlaying = true;
    sound_volume(Time_Flies_By, 0.4);
    sound_loop(Time_Flies_By);
}

//fade in the background
if (tilesComplete)
{
    bg.image_alpha += 0.03;
    bgCopy.image_alpha += 0.03;
    
    if (bg.image_alpha &gt; 1) bg.image_alpha = 1;
    if (bgCopy.image_alpha &gt; 1) bgCopy.image_alpha = 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//update background
bg.y++;
bgCopy.y++;


//move tiles to the center of the screen

for (var i = 0; i &lt; array_length_1d(tileSet1); i++)
{

    if (tileSet1[i].y &gt;= room_height / 4)
    {
        tileSet1[i].y = room_height / 4;
    }
    else
    {
        tileSet1[i].y += 8;
    }
  
}

for (var i = 0; i &lt; array_length_1d(tileSet2); i++)
{

    if (tileSet2[i].y &lt;= room_height / 3 + 100)
    {
        tileSet2[i].y = room_height / 3 + 100;
        
    }
    else
    {
        tileSet2[i].y -= 8;
    }

}

//check for mouse input
if (!instance_exists(screenFadeObj))
{
    if (mouse_check_button_pressed(mb_left))
    {
        tilesComplete = true;       //skips the tile animation.
        
        //which button was clicked?
        if (mouse_x &gt;= startButton.x &amp;&amp; mouse_x &lt;= startButton.x + startButton.sprite_width)
        {
            if (mouse_y &gt;= startButton.y &amp;&amp; mouse_y &lt;= startButton.y + startButton.sprite_height)
            {
                show_debug_message("Clicked start button");
                sound_play(select);
                global.nextScreen = menuScreen;
                instance_create(0, 0, screenFadeObj);
            }
        }
        
        //credits button
        if (mouse_x &gt;= creditsButton.x &amp;&amp; mouse_x &lt;= creditsButton.x + creditsButton.sprite_width)
        {
            if (mouse_y &gt;= creditsButton.y &amp;&amp; mouse_y &lt;= creditsButton.y + creditsButton.sprite_height)
            {
                sound_play(select);
                var file = working_directory + "records.ini";
                ini_open(file);
                global.allLevelsComplete = ini_read_real("Progress", "gameFinished", 0);
                ini_close();
                if (global.allLevelsComplete)
                {
                    global.nextScreen = endingScreen;
                    instance_create(0, 0, screenFadeObj);
                }
                else
                {
                    global.nextScreen = creditsScreen;
                    instance_create(0, 0, screenFadeObj);
                }
            }
        }
        
        //exit
        if (mouse_x &gt;= exitButton.x &amp;&amp; mouse_x &lt;= exitButton.x + exitButton.sprite_width)
        {
            if (mouse_y &gt;= exitButton.y &amp;&amp; mouse_y &lt;= exitButton.y + exitButton.sprite_height)
            {
                sound_play(select);
                game_end();
            }
        }     
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//stop music
sound_stop_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(screenFadeObj))
{
    if (tilesComplete)
    {
        draw_set_color(c_white);
        draw_set_font(legalFont);
        draw_text(room_width / 2.8, room_height - 100, "Copyright 2014 Mike Murray, all rights reserved.");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (tilesComplete)
{
    startButton.visible = true;
    creditsButton.visible = true;
    exitButton.visible = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
